from parachute import Parachute
from dictionary import Dictionary

class Director:
    """The class responsible for managing the game

    Attributes:
        _parachute: An instance of the Parachute class.
        _dict: An instance of the dictionary class.
        _word: The word the player needs to guess (generated by the dictionary class).
        _guess: The player's guess.
        _guessed: List containing the player's previous guesses.
        _output: The string to be displayed at the start of each round.
        _is_playing:  
    """
    
    def __init__(self):
        
        self._parachute = Parachute()
        self._dict = Dictionary()
        self._word = self._dict.get_word()
        self._guess = ""
        self._guessed = []
        self._output = []
        self._is_playing = True

    def start_game(self):
        
        while self._is_playing:
            self.update_screen()
            self.game_over()
            self.get_guess()
            self.compare_guess()
    
    def update_screen(self):

        if not self._is_playing:
            return
        
        if self._guess == "":
            for i in range(len(self._word)):
                self._output.append("_")
            
        for letter in self._output:
            print(letter, end=" ")
        print(f"{self._parachute.get_parachute()}")
    
    def get_guess(self):

        if not self._is_playing:
            return

        self._guess = input("Guess a letter [a-z]: ")
        while self._guess in self._guessed:
            print(f"You already guessed: {self._guess}")
            self._guess = input("Guess a letter [a-z]: ")
        self._guessed.append(self._guess)
    
    def compare_guess(self):

        if not self._is_playing:
            return

        if self._guess in self._word:
            self._output[self._word.index(self._guess)] = self._guess
        else:
            self._parachute.reduce_parachute()
        
    def game_over(self):

        if self._parachute.get_parachute_level() == 0:
            self._dict.display_word()
            self._is_playing = False